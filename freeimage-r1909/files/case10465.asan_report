=================================================================
==1640602==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffff6000220 at pc 0x55555581884c bp 0x7fffffffd650 sp 0x7fffffffd648
WRITE of size 1 at 0x7ffff6000220 thread T0
CitrusTriage#0 pc=0x55555581884b [in readLine(char*, int, FreeImageIO*, void*)] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/PluginXBM.cpp:62:9
CitrusTriage#1 pc=0x555555816d53 [in readXBMFile(FreeImageIO*, void*, int*, int*, char**)] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/PluginXBM.cpp:112:7
CitrusTriage#2 pc=0x555555815dfa [in Load(FreeImageIO*, void*, int, int, void*)] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/PluginXBM.cpp:323:23
CitrusTriage#3 pc=0x55555574d258 [in FreeImage_LoadFromHandle] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/Plugin.cpp:386:24
CitrusTriage#4 pc=0x55555574d40a [in FreeImage_Load] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/Plugin.cpp:406:22
CitrusTriage#5 pc=0x55555573034a [in main] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/fuzz/work.cpp:9:25
CitrusTriage#6 pc=0x7ffff7a456c9 [] at (/lib/x86_64-linux-gnu/libc.so.6+0x276c9) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)
CitrusTriage#7 pc=0x7ffff7a45784 [in __libc_start_main] at (/lib/x86_64-linux-gnu/libc.so.6+0x27784) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)
CitrusTriage#8 pc=0x5555556576e0 [in _start] at (/work/programs/freeimage/analyze/bin/pure-work.asan+0x1036e0) (BuildId: 6cc57296c8d1b785633921754f3c58e27c42e3a4)

Address 0x7ffff6000220 is located in stack of thread T0 at offset 544 in frame
CitrusTriage#0 pc=0x555555816a0f [in readXBMFile(FreeImageIO*, void*, int*, int*, char**)] at /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/PluginXBM.cpp:89

  This frame has 4 object(s):
    [32, 544) 'line' (line 90) <== Memory access at offset 544 overflows this variable
    [608, 1120) 'name_and_type' (line 90)
    [1184, 1188) 'v' (line 94)
    [1200, 2224) 'hex_table' (line 97)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /work/programs/freeimage/freeimage-svn/FreeImage/trunk/Source/FreeImage/PluginXBM.cpp:62:9 in readLine(char*, int, FreeImageIO*, void*)
Shadow bytes around the buggy address:
  0x7ffff5ffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7ffff6000200: 00 00 00 00[f2]f2 f2 f2 f2 f2 f2 f2 00 00 00 00
  0x7ffff6000280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffff6000400: 00 00 00 00 00 00 00 00 00 00 00 00 f2 f2 f2 f2
  0x7ffff6000480: f2 f2 f2 f2 04 f2 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1640602==ABORTING
